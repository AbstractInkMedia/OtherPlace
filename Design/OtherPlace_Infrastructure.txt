
--------------------
	Infrastructure
--------------------

	[ General Structure ]

	• Game Systems provide the means for Game States to change the UI,
		Map, (Broad) Agent Behavior, etc.
	
	• Game States provide logic and events relevant to that State.
		Ex: Game State MapGeneration creates a Map by interacting with
		Game Systems MapGenerator, but doesn't do anything to remove the map
		once the state ends.
	
	• Game States do not communicate with each other. If a Game State must
		transition to another, the Game State will inform the Game Systems Manager,
		which will then make the appropriate calls to end the current state,
		and begin the next.


	[ Game State ]
	
	Game State MainMenu:
		• As the name, prepares the Main Menu and sets up transition to
			the next state based on user interaction with on-screen options.

	[ Game Systems ]
	
	Game Systems Manager:
		• Functions as primary system for Game State handling.
		• Calls active State to Enter and Update State,
			then checks if the State needs to transition to a new State,
			at which point it will Exit the former and Enter the latter.
	
	Game Systems Flags: // Depricated, no longer in-use
		• Intended to be used by other Systems to create flags read in by
			the Game Systems Manager. This was part of the old infrastructure
			and is no longer of use.
	
	Game Systems Map Generator:
		• Responsible for generating the game environment.
		• Similarly responsible for deconstructing the game environment when called.

	Game Systems Agent Handler:
		• Responsible for handling Agents, which then influence Agent Characters.
		• Note: It is ideal that the Agent Handler run before Game Systems Player,
			so that agents will react to the Player Character's current state,
			giving the Player a 1-frame advantage. At present, with the new
			Infrastructure, there is no strict enforcement of this.

	Game Systems Player:
		• Note: previously was responsible for handling input, but
			with the new Game State based infrastructure, it will
			have functions for specific Player Character behavior that will
			be called by the current Game State.
		• Influences Player Character


	[ Agents ]

	Agent:
		• Base Class used by all other Agents.
	
	Agent Character:
		• Inherits from Agent, with additional features for influencing an
			in-game Character.


	[ Game Characters ]
	
	Game Character Player:
		• Represents the Player, and is influenced by Game_Systems_Player.
	
	Seeker:
		• Antagonist of the Other Place, inherits from Agent Character.