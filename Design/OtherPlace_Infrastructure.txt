
--------------------
	Infrastructure
--------------------

	[ General Structure ]

	• Game Systems provide the means for Game States to change the UI,
		Map, (Broad) Agent Behavior, etc.
	
	• Game States provide logic and events relevant to that State.
		Ex: Game State MapGeneration creates a Map by interacting with
		Game Systems MapGenerator, but doesn't do anything to remove the map
		once the state ends.
	
	• Game States do not communicate with each other. If a Game State must
		transition to another, the Game State will inform the Game Systems Manager,
		which will then make the appropriate calls to end the current state,
		and begin the next.


	[ Game State ]
	
	Game State MainMenu:
		• As the name, prepares the Main Menu and sets up transition to
			the next state based on user interaction with on-screen options.

	[ Game Systems ]
	
	Game Systems Manager:
		• Functions as primary system for Game State handling.
		• Influences Game Systems Flags, which is called by other systems to request
			changes to the Game State.
		• On a new frame, Game Systems Manager takes in the current Game Systems Flags
			and acts accordingly.
	
	Game Systems Flags:
		• Called by other systems to request changes to the current game state.
		• On a new frame, Game Systems Manager takes in information from 
			Game Systems Flags and acts accordingly.
	
	Game Systems Map Generator:
		• Responsible for generating the game environment when called by
			the Game Systems Manager.
		• Similarly responsible for deconstructing the game environment when called
			by the Game Systems Manager.

	Game Systems Agent Handler:
		• Responsible for handling Agents and making calls to Game Systems Manager
			via Events.
		• Runs before Game Systems Player, so that agents will react to the
			Player Character's current state, giving the Player a 1-frame
			advantage. Essentially, the Agents react to the Player,
			rather than the Player reacting to the Agents.

	Game Systems Player:
		• Responsible for handling Player input, some of which will be used to
			manipulate the associated Game Character Player, and others which will
			call Game Systems Manager via Events.
		• As above, runs after Game Systems Agent Handler so that the Agents
			react to the Player. For example, if the Player Character moves,
			the Agent will have 1-frame where they still consider the initial
			position the Player Character was standing in; if the Player Character
			were to instead move before before the Agent Handler, then the
			Agents would instantly react.



	[ Agents ]

	Agent:
		• Base Class used by all other Agents.
	
	Agent Character:
		• Inherits from Agent, with additional features for influencing an
			in-game Character.


	[ Game Characters ]
	
	Game Character Player:
		• Represents the Player, and 